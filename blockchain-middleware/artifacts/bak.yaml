---
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#
name: "balance-transfer"

#
# Any properties with an "x-" prefix will be treated as application-specific, exactly like how naming
# in HTTP headers or swagger properties work. The SDK will simply ignore these fields and leave
# them for the applications to process. This is a mechanism for different components of an application
# to exchange information that are not part of the standard schema described below. In particular,
# the "x-type" property with the "hlfv1" value example below is used by Hyperledger Composer to
# determine the type of Fabric networks (v0.6 vs. v1.0) it needs to work with.
#
x-type: "hlfv1"

#
# Describe what the target network is/does.
#
description: "Balance Transfer Network"

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: "1.0"

#
# The client section will be added on a per org basis see ybl.yaml and anchor.yaml
#
#client:

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  channelyblanchorvendor:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("ybl" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    orderers:
      - orderer.yesbank.in
      - orderer2.yesbank.in
      - orderer3.yesbank.in

    # Required. list of peers from participating orgs
    peers:
      peer0.ybl.yesbank.in:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

      peer1.ybl.yesbank.in:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false

      peer0.anchor.yesbank.in:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.anchor.yesbank.in:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false

      peer0.vendor.yesbank.in:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.vendor.yesbank.in:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false


    # this list with the query results of getInstalledChaincodes() and getInstantiatedChaincodes()
    chaincodes:
      # the format follows the "cannonical name" of chaincodes by fabric code
      - mycc:v0

#
# list of participating organizations in this network
#
organizations:
  Ybl:
    mspid: YblMSP

    peers:
      - peer0.ybl.yesbank.in
      - peer1.ybl.yesbank.in

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca-ybl

    # [Optional]. If the application is going to make requests that are reserved to organization
    # administrators, including creating/updating channels, installing/instantiating chaincodes, it
    # must have access to the admin identity represented by the private key and signing certificate.
    # Both properties can be the PEM string or local path to the PEM file. Note that this is mainly for
    # convenience in development mode, production systems should not expose sensitive information
    # this way. The SDK should allow applications to set the org admin identity via APIs, and only use
    # this route as an alternative when it exists.
    adminPrivateKey:
      path: artifacts/crypto-config/peerOrganizations/ybl.yesbank.in/users/Admin@ybl.yesbank.in/msp/keystore/dffd5d48b93de914884e2690d2b57beed56707dca93c5f4824bd201c5b12b156_sk
    signedCert:
      path: artifacts/crypto-config/peerOrganizations/ybl.yesbank.in/users/Admin@ybl.yesbank.in/msp/signcerts/Admin@ybl.yesbank.in-cert.pem

  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  Anchor:
    mspid: AnchorMSP
    peers:
      - peer0.anchor.yesbank.in
      - peer1.anchor.yesbank.in
    certificateAuthorities:
      - ca-anchor
    adminPrivateKey:
      path: artifacts/crypto-config/peerOrganizations/anchor.yesbank.in/users/Admin@anchor.yesbank.in/msp/keystore/0a1ee0f793e6305346e9ab443d367290cc24185a7901c1363c4674b955cc137f_sk
    signedCert:
      path: artifacts/crypto-config/peerOrganizations/anchor.yesbank.in/users/Admin@anchor.yesbank.in/msp/signcerts/Admin@anchor.yesbank.in-cert.pem



  Vendor:
    mspid: VendorMSP
    peers:
      - peer0.Vendor.yesbank.in
      - peer1.vendor.yesbank.in
    certificateAuthorities:
      - ca-vendor
    adminPrivateKey:
      path: artifacts/crypto-config/peerOrganizations/vendor.yesbank.in/users/Admin@vendor.yesbank.in/msp/keystore/7da03c2ce86283947fc9fe88510c80d80eb7279596c3533f0d11e4f7f0c18925_sk
    signedCert:
      path: artifacts/crypto-config/peerOrganizations/vendor.yesbank.in/users/Admin@vendor.yesbank.in/msp/signcerts/Admin@vendor.yesbank.in-cert.pem

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.yesbank.in:
    url: grpcs://orderer.yesbank.in:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.yesbank.in

    tlsCACerts:
      path: artifacts/crypto-config/ordererOrganizations/yesbank.in/orderers/orderer.yesbank.in/tls/ca.crt



  orderer2.yesbank.in:
    url: grpcs://orderer2.yesbank.in:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer2.yesbank.in

    tlsCACerts:
      path: artifacts/crypto-config/ordererOrganizations/yesbank.in/orderers/orderer2.yesbank.in/tls/ca.crt


  orderer3.yesbank.in:
    url: grpcs://orderer3.yesbank.in:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer3.yesbank.in

    tlsCACerts:
      path: artifacts/crypto-config/ordererOrganizations/yesbank.in/orderers/orderer3.yesbank.in/tls/ca.crt
#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.ybl.yesbank.in:
    # this URL is used to send endorsement and query requests
    url: grpcs://peer0.ybl.yesbank.in:7051

    eventUrl: grpcs://peer0.ybl.yesbank.in:7053
    grpcOptions:
      ssl-target-name-override: peer0.ybl.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/ybl.yesbank.in/peers/peer0.ybl.yesbank.in/tls/ca.crt

  peer1.ybl.yesbank.in:
    # this URL is used to send endorsement and query requests
    url: grpcs://peer1.ybl.yesbank.in:8051

    eventUrl: grpcs://peer1.ybl.yesbank.in:8053
    grpcOptions:
      ssl-target-name-override: peer1.ybl.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/ybl.yesbank.in/peers/peer1.ybl.yesbank.in/tls/ca.crt

  peer0.anchor.yesbank.in:
    url: grpcs://peer0.anchor.yesbank.in:9051
    eventUrl: grpcs://peer0.anchor.yesbank.in:9053
    grpcOptions:
      ssl-target-name-override: peer0.anchor.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/anchor.yesbank.in/peers/peer0.anchor.yesbank.in/tls/ca.crt

  peer1.anchor.yesbank.in:
    url: grpcs://peer1.anchor.yesbank.in:10051
    eventUrl: grpcs://peer1.anchor.yesbank.in:10053
    grpcOptions:
      ssl-target-name-override: peer1.anchor.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/anchor.yesbank.in/peers/peer1.anchor.yesbank.in/tls/ca.crt


  peer0.vendor.yesbank.in:
    url: grpcs://peer0.vendor.yesbank.in:11051
    eventUrl: grpcs://peer0.vendor.yesbank.in:11053
    grpcOptions:
      ssl-target-name-override: peer0.vendor.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/vendor.yesbank.in/peers/peer0.vendor.yesbank.in/tls/ca.crt

  peer1.vendor.yesbank.in:
    url: grpcs://peer1.vendor.yesbank.in:12051
    eventUrl: grpcs://peer1.vendor.yesbank.in:12053
    grpcOptions:
      ssl-target-name-override: peer1.vendor.yesbank.in
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/vendor.yesbank.in/peers/peer1.vendor.yesbank.in/tls/ca.crt
#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca-ybl:
    url: https://localhost:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/ybl.yesbank.in/ca/ca.ybl.yesbank.in-cert.pem

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-ybl

  ca-anchor:
    url: https://localhost:8054
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/anchor.yesbank.in/ca/ca.anchor.yesbank.in-cert.pem
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-anchor


  ca-vendor:
    url: https://localhost:9054
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/vendor.yesbank.in/ca/ca.vendor.yesbank.in-cert.pem
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-vendor

